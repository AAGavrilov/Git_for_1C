#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ОбъектМетаданных = ЭтотОбъект.Метаданные();
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Наименование = ОбъектМетаданных.Синоним;
	ПараметрыРегистрации.Информация = ?(ПустаяСтрока(ОбъектМетаданных.Комментарий), ОбъектМетаданных.Синоним, ОбъектМетаданных.Комментарий);
	ПараметрыРегистрации.Версия = "2.0.0.1";
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	
	Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеПривилегированногоРежима();
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	ПараметрыРегистрации.Назначение.Добавить("Документ.ТребованиеНакладная");
	
	КомандаПечати = ПараметрыРегистрации.Команды.Добавить();
	КомандаПечати.Идентификатор = "АктНаСписаниеТМЦ_РТУ";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание ТМЦ (РТУ)'");
	КомандаПечати.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	КомандаПечати.ПоказыватьОповещение = Ложь;
	КомандаПечати.Модификатор = "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктНаСписаниеТМЦ_РТУ");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАктНаСписаниеМатериалов(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт на списание ТМЦ (РТУ)'");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(
		МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАктНаСписаниеМатериалов(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб          = Истина;
	ТабличныйДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктНаСписаниеМатериалов";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктНаСписаниеТМЦ_ВПФ");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ТекстЗапросаАктНаСписаниеМатериалов();
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		ДатаНач = ?(ЗначениеЗаполнено(ВыборкаИтоги.ДатаНач), ВыборкаИтоги.ДатаНач, '00010101');
		ДатаКон = ?(ЗначениеЗаполнено(ВыборкаИтоги.ДатаКон), ВыборкаИтоги.ДатаКон, '00010101');
		
		// Из общей таблицы сумм списания получим таблицу по документу с учетом партий указанных в табличной части.
		ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивовПоПартиям(
			МассивОбъектов, ДатаНач, ДатаКон);
		
		ПервыйДокумент = Истина;
		ВыборкаДокумент = ВыборкаИтоги.Выбрать();
		
		Пока ВыборкаДокумент.Следующий() Цикл
			
			Материалы = ВыборкаДокумент.Материалы.Выгрузить();
			Если Материалы.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СоставКомиссии = ВыборкаДокумент.СоставКомиссии.Выгрузить();
			
			// В запросе сортировать нельзя, потому что выбираются данные двух табличных частей
			Материалы.Сортировать("НомерСтроки");
			СоставКомиссии.Сортировать("НомерСтроки");
			
			ТаблицаСуммСписанияПоДокументу = ТаблицаСуммСписанияПоДокументу(
				ТаблицаСуммСписанияПоДокументам, ВыборкаДокумент.Ссылка, Материалы);
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДокумент);
			
			ДанныеПечати = Новый Структура;
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
				ВыборкаДокумент.Организация, ВыборкаДокумент.ДатаДокумента);
			ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
					СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
			ДанныеПечати.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
			
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
				ВыборкаДокумент.НомерДокумента, Истина, Ложь);
			ДанныеПечати.Вставить("НомерДокумента", НомерДокумента);
			
			ДатаДокумента = Формат(ВыборкаДокумент.ДатаДокумента, "ДФ='dd.MM.yyyy ""г.""'");
			ДанныеПечати.Вставить("ДатаДокумента", ДатаДокумента);
			
			ДиректорПоНаправлению = рту_ЗакупкиСервер.ДиректорПоНаправлениюПодразделения(
				ВыборкаДокумент.ПодразделениеОрганизации, ВыборкаДокумент.ДатаДокумента);
			Если ЗначениеЗаполнено(ДиректорПоНаправлению.ФизическоеЛицо) Тогда
				ФИОРуководителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(
					ДиректорПоНаправлению.ФизическоеЛицоПредставление);
				ДанныеПечати.Вставить("ФИОРуководителя", ФИОРуководителя);
				ДанныеПечати.Вставить("ДолжностьРуководителя", ДиректорПоНаправлению.ДолжностьПредставление);
			КонецЕсли;
			
			ПредставлениеПериода = ПредставлениеДатыВПредложномПадеже(ВыборкаДокумент.ДатаДокумента);
			ДанныеПечати.Вставить("ПредставлениеПериодаДокумента", ПредставлениеПериода);
			
			Если ВыборкаДокумент.Склад <> Справочники.Склады.ПустаяСсылка() Тогда
				МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(
					ВыборкаДокумент.Склад, ВыборкаДокумент.ДатаДокумента);
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(
					ВыборкаДокумент.Организация, МОЛ, ВыборкаДокумент.ДатаДокумента);
				ДанныеПечати.Вставить("МОЛФИО", ДанныеФизЛица.Представление);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			СтатьяОборотов = ВыборкаДокумент.СтатьяОборотов;
			ИтогоСумма = 0;
			Для Каждого Строка Из Материалы Цикл
				
				Параметры = Новый Структура;
				НомерСтроки = Материалы.Индекс(Строка) + 1;
				Параметры.Вставить("НомерСтроки", НомерСтроки);
				Параметры.Вставить("МатериалНаименование", Строка.МатериалНаименование);
				Параметры.Вставить("Код", Строка.Код);
				Параметры.Вставить("ЕдиницаИзмерения", Строка.ЕдиницаИзмерения);
				Параметры.Вставить("Количество", Строка.Количество);
				
				// Поиск сумм списания материалов для заполнения Цены и Суммы
				СуммаСписания = СуммаСписания(ТаблицаСуммСписанияПоДокументу, Строка.Материал, Строка.Партия, Строка.Количество);
				
				Параметры.Вставить("Цена",  Окр(СуммаСписания/Строка.Количество, 2));
				Параметры.Вставить("Сумма", СуммаСписания);
				
				Параметры.Вставить("СтатьяОборотов", СтатьяОборотов);
				
				ОбластьМакета.Параметры.Заполнить(Параметры);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ИтогоСумма = ИтогоСумма + СуммаСписания;
				
			КонецЦикла;
			
			ОбластьМакета = Макет.ПолучитьОбласть("КонецТаблицы");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Если ИтогоСумма <> 0 Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ОбщаяСумма");
				ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Всего наименований: %1, на сумму: %2'"),
					Материалы.Количество(),
					ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогоСумма, ВалютаРегУчета));
				ДанныеПечати.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			СписокФизЛиц = СоставКомиссии.ВыгрузитьКолонку("ФизЛицо");
			ПоляИмени = "ФамилияИО";
			ФИОФизЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
				Истина,
				СписокФизЛиц,
				ПоляИмени,
				ВыборкаДокумент.ДатаДокумента);
			ВывестиКомиссию(ТабличныйДокумент, Макет, СоставКомиссии, ФиоФизЛиц);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокумент.Ссылка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ТекстЗапросаАктНаСписаниеМатериалов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТребованиеНакладная.Номер КАК НомерДокумента,
	|	ТребованиеНакладная.Дата КАК ДатаДокумента,
	|	ТребованиеНакладная.Дата КАК ДатаНач,
	|	ТребованиеНакладная.Дата КАК ДатаКон,
	|	ТребованиеНакладная.Организация КАК Организация,
	|	ТребованиеНакладная.Ссылка КАК Ссылка,
	|	ТребованиеНакладная.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладная.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТребованиеНакладная.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ ТребованиеНакладная.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеПодразделения,
	|	ТребованиеНакладная.Склад КАК Склад,
	|	ТребованиеНакладная.ЦельРасхода КАК ЦельРасхода,
	|	УК_ДополнительныеАналитики.ЗначениеАналитики КАК СтатьяОборотов,
	|	ТребованиеНакладная.Материалы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Материал,
	|		ВЫБОР
	|			КОГДА ТребованиеНакладная.Материалы.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|				ТОГДА ТребованиеНакладная.Материалы.Номенклатура.Наименование
	|			ИНАЧЕ ТребованиеНакладная.Материалы.Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК МатериалНаименование,
	|		Номенклатура.Код КАК Код,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		ДокументОприходования КАК Партия
	|	) КАК Материалы,
	|	ТребованиеНакладная.СоставКомиссии.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ФизЛицо КАК ФизЛицо,
	|		Должность КАК Должность,
	|		Должность.Наименование КАК ДолжностьНаименование
	|	) КАК СоставКомиссии
	|ИЗ
	|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УК_ДополнительныеАналитики КАК УК_ДополнительныеАналитики
	|		ПО ТребованиеНакладная.Ссылка = УК_ДополнительныеАналитики.Объект
	|			И (УК_ДополнительныеАналитики.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.УК_ВидыДополнительныхАналитик.СтатьяОборотов))
	|ГДЕ
	|	ТребованиеНакладная.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТребованиеНакладная.Дата,
	|	ТребованиеНакладная.Ссылка
	|ИТОГИ
	|	МИНИМУМ(ДатаНач),
	|	МАКСИМУМ(ДатаКон)
	|ПО
	|	ОБЩИЕ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВывестиКомиссию(ТабличныйДокумент, Макет, СоставКомиссии, ФиоФизЛиц)
	
	//комиссия не заполнена: вариант по умолчанию (4 члена комиссии)
	Если СоставКомиссии.Количество() = 0 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПредседательКомиссии");
		ОбластьМакета.Параметры.ПредседательКомиссии = НСтр("ru = 'Председатель комиссии:'");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЧленКомиссии");
		ОбластьМакета.Параметры.ЧленыКомиссии = НСтр("ru = 'Члены комиссии:'");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета.Параметры.ЧленыКомиссии = "";
		Для Счетчик = 2 По 3 Цикл
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	//Комиссия заполнена
	ОбластьМакета = Макет.ПолучитьОбласть("ПредседательКомиссии");
	Если СоставКомиссии.Количество() <> 1 Тогда
		ОбластьМакета.Параметры.ПредседательКомиссии = НСтр("ru = 'Председатель комиссии:'");
	КонецЕсли;
	ОбластьМакета.Параметры.ДолжностьПредседателя = СоставКомиссии[0].ДолжностьНаименование;
	ОбластьМакета.Параметры.ФИОПредседателя = ПредставлениеФИОЧленаКомиссии(ФИОФизЛиц, СоставКомиссии[0].ФизЛицо);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ЧленКомиссии");
	Если СоставКомиссии.Количество() <> 1 Тогда
		ОбластьМакета.Параметры.ЧленыКомиссии = НСтр("ru = 'Члены комиссии:'");
	КонецЕсли;
	
	Для ИндексСтроки = 1 По СоставКомиссии.Количество() - 1 Цикл
		Строка = СоставКомиссии[ИндексСтроки];
		Если ИндексСтроки > 1 Тогда
			ОбластьМакета.Параметры.ЧленыКомиссии = "";
		КонецЕсли;
		ОбластьМакета.Параметры.ДолжностьЧленКомиссии = Строка.ДолжностьНаименование;
		ОбластьМакета.Параметры.ФИОЧленКомиссии = ПредставлениеФИОЧленаКомиссии(ФИОФизЛиц, Строка.ФизЛицо);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
КонецПроцедуры

Функция ПредставлениеФИОЧленаКомиссии(ФИОФизЛиц, ФизЛицо)
	
	ФИОФизЛица = ФИОФизЛиц.Найти(ФизЛицо, "ФизическоеЛицо");
	Если ФИОФизЛица = Неопределено Тогда
		Представление = "";
	Иначе
		Представление = ФИОФизЛица.ФамилияИО;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПредставлениеДатыВПредложномПадеже(Дата)
	
	МесяцСтрокой = Формат(Дата, "ДФ=MMMM");
	ГодЧислом = Год(Дата);
	ГодСтрокой = Формат(ГодЧислом, "ЧГ=0");
	
	Таблица = Новый Соответствие;
	Таблица.Вставить("Январь",   "январе");
	Таблица.Вставить("Февраль",  "феврале");
	Таблица.Вставить("Март",     "марте");
	Таблица.Вставить("Апрель",   "апреле");
	Таблица.Вставить("Май",      "мае");
	Таблица.Вставить("Июнь",     "июне");
	Таблица.Вставить("Июль",     "июле");
	Таблица.Вставить("Август",   "августе");
	Таблица.Вставить("Сентабрь", "сентябре");
	Таблица.Вставить("Октябрь",  "октябре");
	Таблица.Вставить("Ноябрь",   "ноябре");
	Таблица.Вставить("Декабрь",  "декабре");
	
	МесяцВПадеже = Таблица[МесяцСтрокой];
	
	Возврат СтрШаблон("%1 %2", МесяцВПадеже, ГодСтрокой);
	
КонецФункции

Функция ТаблицаСуммСписанияПоДокументу(Знач ТаблицаСуммСписанияПоДокументам, Регистратор, ТаблицаМатериалы)
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ТаблицаРезультата.Колонки.Добавить("Номенклатура");
	ТаблицаРезультата.Колонки.Добавить("Партия");
	ТаблицаРезультата.Колонки.Добавить("Количество");
	ТаблицаРезультата.Колонки.Добавить("Сумма");
	
	ТаблицаСуммСписанияПоДокументу = ТаблицаСуммСписанияПоДокументам.Скопировать(Новый Структура("Регистратор", Регистратор));
	
	СтруктураПоиска = Новый Структура("Номенклатура, Партия");
	
	// Сначала заполним сумму оценки по строкам с заполненной партией.
	Для Каждого СтрокаМатериал Из ТаблицаМатериалы Цикл
		Если Не ЗначениеЗаполнено(СтрокаМатериал.Партия) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска.Вставить("Номенклатура", СтрокаМатериал.Материал);
		СтруктураПоиска.Вставить("Партия",       СтрокаМатериал.Партия);
		
		НайденныеСтроки = ТаблицаСуммСписанияПоДокументу.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			// Если не нашли партии в таблице сумм - очищаем ее в таблице материалов, чтобы оценка прошла "по средней"
			СтрокаМатериал.Партия = Неопределено;
		Иначе
			СтрокаСуммСписания = НайденныеСтроки[0];
			Если СтрокаСуммСписания.Количество < СтрокаМатериал.Количество Тогда
				СтрокаМатериал.Партия = Неопределено;
			Иначе
				
				КоличествоПоСтроке = Мин(СтрокаСуммСписания.Количество, СтрокаМатериал.Количество);
				СуммаПоСтроке      = Окр(СтрокаСуммСписания.Сумма*КоличествоПоСтроке/СтрокаСуммСписания.Количество, 2);
				
				НоваяСтрока = ТаблицаРезультата.Добавить();
				
				НоваяСтрока.Номенклатура = СтрокаМатериал.Материал;
				НоваяСтрока.Партия       = СтрокаМатериал.Партия;
				НоваяСтрока.Количество   = КоличествоПоСтроке;
				НоваяСтрока.Сумма        = СуммаПоСтроке;
				
				СтрокаСуммСписания.Сумма      = СтрокаСуммСписания.Сумма - НоваяСтрока.Сумма;
				СтрокаСуммСписания.Количество = СтрокаСуммСписания.Количество - НоваяСтрока.Количество;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// По незаполненным партиям рассчитаем среднюю
	Для Каждого СтрокаСуммСписания Из ТаблицаСуммСписанияПоДокументу Цикл
		Если СтрокаСуммСписания.Количество <> 0 Тогда
			НоваяСтрока = ТаблицаРезультата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСуммСписания, ,"Партия");
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаРезультата.Свернуть("Номенклатура, Партия", "Количество, Сумма");
	ТаблицаРезультата.Индексы.Добавить("Номенклатура, Партия");
	
	Возврат ТаблицаРезультата;
	
КонецФункции

Функция СуммаСписания(ТаблицаСуммСписанияПоДокументам, Номенклатура, Партия, Знач Количество)
	
	СуммаСписания = 0;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	СтруктураПоиска.Вставить("Партия",       ?(ЗначениеЗаполнено(Партия), Партия, Неопределено));
	
	НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
	Для Каждого СтрокаСуммСписания Из НайденныеСтроки Цикл
		Если СтрокаСуммСписания.Количество = 0 Или Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоПоПартии    = Мин(СтрокаСуммСписания.Количество, Количество);
		СуммаСписанияПоПартии = Окр(СтрокаСуммСписания.Сумма * КоличествоПоПартии / СтрокаСуммСписания.Количество, 2);
		
		СтрокаСуммСписания.Сумма      = СтрокаСуммСписания.Сумма - СуммаСписанияПоПартии;
		СтрокаСуммСписания.Количество = СтрокаСуммСписания.Количество - КоличествоПоПартии;
		
		Количество    = Количество - КоличествоПоПартии;
		СуммаСписания = СуммаСписания + СуммаСписанияПоПартии;
	КонецЦикла;
	
	Возврат СуммаСписания;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли